@model IEnumerable<SmartPOSWeb.Models.Product>
@{
    ViewData["Title"] = "Product List";
    int totalPages = (int)ViewData["TotalPages"];
    int currentPage = (int)ViewData["CurrentPage"];
}

<h2 class="mb-4">Product List</h2>

<table class="table table-bordered">
    <thead class="table-dark">
        <tr>
            <th>No.</th>
            <th>Product Name</th>
            <th>Cost Price</th>
            <th>Price</th>
            <th>Description</th>
            <th>Created At</th>
            <th>Edit</th>
            <th>Delete</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Model)
        {
            <tr>
                <td>@product.ProductId</td>
                <td>@product.ProductName</td>
                <td>@product.CostPrice.ToString("C", new System.Globalization.CultureInfo("en-US"))</td>
                <td>@product.Price.ToString("C", new System.Globalization.CultureInfo("en-US"))</td>
                <td>@(product.Description.Length > 50 ? product.Description.Substring(0, 50) + "..." : product.Description)</td>
                <td>@product.CreatedAt.ToString("yyyy-MM-dd")</td>
                <td>
                    <a asp-controller="Product" asp-action="Edit" asp-route-id="@product.ProductId" class="btn btn-warning btn-sm">
                        Edit
                    </a>
                </td>
                <td>
                    <a asp-controller="Product" asp-action="Delete" asp-route-id="@product.ProductId" class="btn btn-danger btn-sm"
                        onclick="return confirm('Are you sure?')">
                        Delete
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>


<!-- 페이지네이션 -->
<nav>
    <ul class="pagination">
        <!-- 이전 페이지 버튼 -->
        @if (currentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" href="/Product?page=@(currentPage - 1)">‹</a>
            </li>
        }

        <!-- 현재 페이지 기준 앞뒤 1개만 표시 -->
        @for (int i = Math.Max(1, currentPage - 1); i <= Math.Min(totalPages, currentPage + 1); i++)
        {
            <li class="page-item @(i == currentPage ? "active" : "")">
                <a class="page-link" href="/Product?page=@i">@i</a>
            </li>
        }

        <!-- 다음 페이지 버튼 -->
        @if (currentPage < totalPages)
        {
            <li class="page-item">
                <a class="page-link" href="/Product?page=@(currentPage + 1)">›</a>
            </li>
        }
    </ul>
</nav>

